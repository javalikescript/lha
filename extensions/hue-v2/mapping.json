{
  "title": "metadata/name",
  "description": "product_data/product_name",
  "types": {
    "light": {
      "on/on": "on",
      "color/xy": {
        "name": "color",
        "adapter": "xy"
      },
      "dimming/brightness": "brightness",
      "color_temperature/mirek": {
        "name": "colorTemperature",
        "adapter": "mirek"
      }
    },
    "button": {
      "button/button_report/event": {
        "nameKey": "metadata/control_id",
        "nameValues": {
          "1": "buttonOn",
          "2": "buttonDimUp",
          "3": "buttonDimDown",
          "4": "buttonOff"
        },
        "adapter": "button",
        "metadata": {
          "@type": "HueButtonEvent",
          "type": "string",
          "title": "Button",
          "description": "The button is pressed or released",
          "enum": ["pressed", "hold", "released", "long-released"],
          "readOnly": true,
          "writeOnly": true
        }
      }
    },
    "zigbee_connectivity": {
      "status": {
        "name": "connected",
        "adapter": "connected"
      }
    },
    "device_power": {
      "power_state/battery_level": "battery"
    }
  },
  "adapters": {
    "xy": {
      "get": "return Thing.formatRgbHex(color.xyBriToRgb(value.x, value.y, 1.0))",
      "set": "local x, y = color.rgbToXy(Thing.parseRgbHex(value)); return {x = x, y = y}"
    },
    "mirek": {
      "get": "return color.mirekToColorTemperature(value)",
      "set": "return color.mirekToColorTemperature(value)"
    },
    "button": {
      "get": "if value == 'initial_press' then return 'pressed' elseif value == 'long_press' or value == 'repeat' then return 'hold' elseif value == 'short_release' or value == 'short_release' then return 'released' elseif value == 'long_release' then return 'long-released' end"
    },
    "connected": {
      "get": "return value == 'connected'"
    }
  }
}